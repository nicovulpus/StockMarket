// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace StockServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250511151833_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StockServer.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float?>("ChangePercent")
                        .HasColumnType("real");

                    b.Property<float?>("DividendYield")
                        .HasColumnType("real");

                    b.Property<decimal>("MarketCap")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "market_cap");

                    b.Property<float?>("PERatio")
                        .HasColumnType("real");

                    b.Property<decimal?>("PreviousClose")
                        .HasColumnType("numeric");

                    b.Property<long?>("SharesOutstanding")
                        .HasColumnType("bigint");

                    b.Property<string>("StockCompanyName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "stock_company_name");

                    b.Property<string>("StockIndustry")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "stock_industry");

                    b.Property<string>("StockMarket")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "stock_market");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "stock_name");

                    b.Property<decimal>("StockPrice")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "stock_price");

                    b.Property<string>("StockSector")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "stock_sector");

                    b.Property<string>("StockSymbol")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "stock_symbol");

                    b.Property<int?>("Volume")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("StockServer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
